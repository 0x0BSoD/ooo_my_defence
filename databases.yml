- hosts: databases
  become: yes
  vars:
    mysql_port: 3306
    mysql_bind_address: "0.0.0.0"
    mysql_root_pass: 123456
  tasks:
    - name: install mysql
      apt: name={{ item }} update_cache=yes cache_valid_time=3600 state=present
      with_items:
        - mysql-server
        - python-mysqldb

    - name: start the mysql
      service:
        name: mysql
        state: started
        enabled: true

    - name: update mysql root password
      mysql_user:
        name: root
        host: "{{ item }}"
        password: "{{ mysql_root_pass }}"
        login_user: root
        login_password: "{{ mysql_root_pass }}"
        check_implicit_admin: yes
        priv: "*.*:ALL,GRANT"
      with_items:
        - "{{ ansible_hostname }}"
        - 127.0.0.1
        - ::1
        - localhost

    - name: Copy the templates to their respestive destination
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: "{{ item.mode | default(644) }}"
      with_items:
        - { src: 'configs/my.cnf', dest: '/etc/mysql/my.cnf' }
        - { src: 'configs/root.my.cnf', dest: '~/.my.cnf', mode: '600' }
      notify:
        - Restart MySQL

    - name: anonymous users are not in the database
      mysql_user:
        name: ''
        host: "{{ item }}"
        state: absent
      with_items:
        - localhost
        - "{{ ansible_hostname }}"

    - name: rm test database
      mysql_db:
        name: test
        state: absent
      notify:
        - Restart MySQL

    - mysql_user:
        name: base_viewer
        password: 123456
        priv: '*.*:ALL'
        state: present
        host: '%'

    - name: create db test_db
      mysql_db:
        name: test_db
        encoding: utf8
        state: present

    - name: Copy database dump file
      copy:
        src: "{{ item }}"
        dest: /tmp
      with_items:
        - base/test_db_test1.sql
        - base/test_db_test2.sql

    - name: Restore database
      mysql_db:
        name: test_db
        state: import
        target: "/tmp/{{ item }}"
      with_items:
        - test_db_test1.sql
        - test_db_test2.sql

  handlers:
  - name: Restart MySQL
    service:
      name: mysql
      state: restarted
